@use './variables' as v;
@use 'sass:math' as math;

@mixin mq($point) {
  $size: map-get(v.$breakpoints, $point);
  @media only screen and (min-width: $size) {
    @content;
  }
}

@mixin get-color($theme-elem) {
  background-color: map-get(v.$theme, $theme-elem);
  color: map-get(v.$theme-over, $theme-elem);
}

@mixin aspect-ratio($w, $h) {

  & .preview-image {
    position: relative;
  }

  & .preview-image::after {
    display: block;
    content: "";
    padding-bottom: math.div($h, $w) * 100%;
  }

  & .preview-image img {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
}

@mixin gridish-flex($n-cols) {
  display: flex;
  flex-wrap: wrap;

  // Selects all the children of flex container -> selects flex items
  & > * {
    flex-shrink: 1;
    flex-grow: 1;
    flex-basis: math.div(100%, $n-cols);
  }
}
